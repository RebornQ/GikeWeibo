apply plugin: 'com.android.application'

// 加载 keystore.properties 文件
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "pw.gike.gikeweibo"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resValue "string", "app_name", "Gike微博" // 设置默认的app_name
        multiDexEnabled true
    }
    signingConfigs {
        debug {
            storeFile file(keystoreProperties['RELEASE_STORE_FILE'])
            storePassword keystoreProperties['RELEASE_KEYSTORE_PASSWORD']
            keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
            keyPassword keystoreProperties['RELEASE_KEY_PASSWORD']
        }
        release {
            storeFile file(keystoreProperties['RELEASE_STORE_FILE'])
            storePassword keystoreProperties['RELEASE_KEYSTORE_PASSWORD']
            keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
            keyPassword keystoreProperties['RELEASE_KEY_PASSWORD']
        }
    }
    buildTypes {
        debug {
            // 签名
            signingConfig signingConfigs.debug
            versionNameSuffix ".debug"
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "Gike微博-Debug"  // 设置Debug的app_name
        }
        release {
            // 签名
            signingConfig signingConfigs.release
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            // 混淆
            minifyEnabled true
            // 解决多包冲突
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "Gike微博"
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "Gike微博-${variant.baseName}-${variant.versionCode}-${variant.versionName}.apk"
            }
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            universalApk true
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // Weibo
    implementation 'com.sina.weibo.sdk:core:4.3.6:openDefaultRelease@aar'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.2'        //Retrofit专门为Rxjava封装的适配器

    // Okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'     //打印网络请求的log日志

    // Rxjava
    implementation 'io.reactivex:rxandroid:1.2.1'
    //Rxjava专门针对anroid封装的RxAndroid
    implementation 'io.reactivex:rxjava:1.2.4'

    // 解决多包冲突
    implementation 'com.android.support:multidex:1.0.3'

    // RecyclerView、CardView
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    // RefreshLayout
    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'

    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
